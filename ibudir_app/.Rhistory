"101" = 101,
"103" = 103,
"104" = 104,
"105" = 105
),
selected = c("101")
),
selectInput("dataType",
label = h3("Tegund gagna"),
choices = list("Verð" = 1, "Fermetraverð" = 2),
selected = 1
),
sliderInput("size",
label = h3("Stærð í fm2"),
min = minsize,
max = maxsize,
value = c(75, 125)
)
),
mainPanel("main panel",
plotOutput('myplot'))
))
server <- function(input, output) {
output$myplot <- renderPlot({
### Bara fyrir meðaltal
prep_trend <- cleandata[cleandata$postnr %in% postnr_mean,]
prep_trend <- prep_trend[prep_trend$size > input$size[1] & prep_trend$size < input$size[2],]
prep_trend$postnr <- 999
cleandata <- rbind(cleandata, prep_trend)
prep <- cleandata[cleandata$postnr %in% input$checkGroup,]
prep <- prep[prep$size > input$size[1] & prep$size < input$size[2],]
if(input$dataType == 1)
{
aggr_data <- aggregate(prep$verd, by=list(prep$date, prep$postnr), mean)
aggr_data$Group.2 <- paste("postnr ", aggr_data$Group.2, sep = "")
#aggr_data$Group.2 <- aggr_data[aggr_data$Group.2 == "postnr 999"] <- "Meðaltal"
y.name <- "Verð"
} else {
aggr_data <- aggregate(prep$fermverd, by=list(prep$date, prep$postnr), mean)
aggr_data$Group.2 <- paste("postnr ", aggr_data$Group.2, sep = "")
aggr_data$Group.2 <- aggr_data[Group.2 == "postnr 999"] <- "Meðaltal"
y.name <- "Fermetraverð"
## Hér er plot af Aggregated gögnum
}
aggr_data$Group.2 <- factor(aggr_data$Group.2,
levels = c("Meðaltal", "postnr 101", "postnr 103", "postnr 104", "postnr 105"),
ordered = TRUE)
options(scipen=5)
observe(p)
ggplot(aggr_data,
aes_string(x = "Group.1", y = "x", group = "Group.2",
colour = "Group.2")) +
geom_line() +
scale_colour_manual(values=c("#999999", "#E69F00", "#56B4E9"),
guide = guide_legend(title = "Postnr"), drop = FALSE) +
theme(axis.title.y=element_text(margin=margin(0,20,0,0)))
})
} #the server
shinyApp(ui = ui, server = server) # this launches your app
library(shiny)
library(ggplot2)
cleandata <- read.csv("data/data_clean.csv")
maxsize <- max(cleandata$size)
minsize <- min(cleandata$size)
postnr_mean <- c(101:116, 170, 172)
dagsetningar <- as.character(unique(unlist(cleandata$date)))
## Clean up the datafile
cleandata <- cleandata[, c("postnr", "verd", "size", "fermverd", "date")]
ui <- fluidPage(
titlePanel("Þróun á íbúðarverði"),
sidebarLayout(position = "left",
sidebarPanel(checkboxGroupInput("checkGroup",
label = h3("Póstnúmer"),
choices = list(
"Meðaltal" = 999,
"101" = 101,
"103" = 103,
"104" = 104,
"105" = 105
),
selected = c("101")
),
selectInput("dataType",
label = h3("Tegund gagna"),
choices = list("Verð" = 1, "Fermetraverð" = 2),
selected = 1
),
sliderInput("size",
label = h3("Stærð í fm2"),
min = minsize,
max = maxsize,
value = c(75, 125)
)
),
mainPanel("main panel",
plotOutput('myplot'))
))
server <- function(input, output) {
output$myplot <- renderPlot({
### Bara fyrir meðaltal
prep_trend <- cleandata[cleandata$postnr %in% postnr_mean,]
prep_trend <- prep_trend[prep_trend$size > input$size[1] & prep_trend$size < input$size[2],]
prep_trend$postnr <- 999
cleandata <- rbind(cleandata, prep_trend)
prep <- cleandata[cleandata$postnr %in% input$checkGroup,]
prep <- prep[prep$size > input$size[1] & prep$size < input$size[2],]
if(input$dataType == 1)
{
aggr_data <- aggregate(prep$verd, by=list(prep$date, prep$postnr), mean)
aggr_data$Group.2 <- paste("postnr ", aggr_data$Group.2, sep = "")
#aggr_data$Group.2 <- aggr_data[aggr_data$Group.2 == "postnr 999"] <- "Meðaltal"
y.name <- "Verð"
} else {
aggr_data <- aggregate(prep$fermverd, by=list(prep$date, prep$postnr), mean)
aggr_data$Group.2 <- paste("postnr ", aggr_data$Group.2, sep = "")
aggr_data$Group.2 <- aggr_data[Group.2 == "postnr 999"] <- "Meðaltal"
y.name <- "Fermetraverð"
## Hér er plot af Aggregated gögnum
}
aggr_data$Group.2 <- factor(aggr_data$Group.2,
levels = c("Meðaltal", "postnr 101", "postnr 103", "postnr 104", "postnr 105"),
ordered = TRUE)
options(scipen=5)
observe(p)
ggplot(aggr_data,
aes_string(x = "Group.1", y = "x", group = "Group.2",
colour = "Group.2")) +
geom_line() +
scale_colour_manual(values=c("#999999", "#E69F00", "#56B4E9", "#454345"),
guide = guide_legend(title = "Postnr"), drop = FALSE) +
theme(axis.title.y=element_text(margin=margin(0,20,0,0)))
})
} #the server
shinyApp(ui = ui, server = server) # this launches your app
library(shiny)
library(ggplot2)
cleandata <- read.csv("data/data_clean.csv")
maxsize <- max(cleandata$size)
minsize <- min(cleandata$size)
postnr_mean <- c(101:116, 170, 172)
dagsetningar <- as.character(unique(unlist(cleandata$date)))
## Clean up the datafile
cleandata <- cleandata[, c("postnr", "verd", "size", "fermverd", "date")]
ui <- fluidPage(
titlePanel("Þróun á íbúðarverði"),
sidebarLayout(position = "left",
sidebarPanel(checkboxGroupInput("checkGroup",
label = h3("Póstnúmer"),
choices = list(
"Meðaltal" = 999,
"101" = 101,
"103" = 103,
"104" = 104,
"105" = 105
),
selected = c("101")
),
selectInput("dataType",
label = h3("Tegund gagna"),
choices = list("Verð" = 1, "Fermetraverð" = 2),
selected = 1
),
sliderInput("size",
label = h3("Stærð í fm2"),
min = minsize,
max = maxsize,
value = c(75, 125)
)
),
mainPanel("main panel",
plotOutput('myplot'))
))
server <- function(input, output) {
output$myplot <- renderPlot({
### Bara fyrir meðaltal
prep_trend <- cleandata[cleandata$postnr %in% postnr_mean,]
prep_trend <- prep_trend[prep_trend$size > input$size[1] & prep_trend$size < input$size[2],]
prep_trend$postnr <- 999
cleandata <- rbind(cleandata, prep_trend)
prep <- cleandata[cleandata$postnr %in% input$checkGroup,]
prep <- prep[prep$size > input$size[1] & prep$size < input$size[2],]
if(input$dataType == 1)
{
aggr_data <- aggregate(prep$verd, by=list(prep$date, prep$postnr), mean)
aggr_data$Group.2 <- paste("postnr ", aggr_data$Group.2, sep = "")
#aggr_data$Group.2 <- aggr_data[aggr_data$Group.2 == "postnr 999"] <- "Meðaltal"
y.name <- "Verð"
} else {
aggr_data <- aggregate(prep$fermverd, by=list(prep$date, prep$postnr), mean)
aggr_data$Group.2 <- paste("postnr ", aggr_data$Group.2, sep = "")
aggr_data$Group.2 <- aggr_data[Group.2 == "postnr 999"] <- "Meðaltal"
y.name <- "Fermetraverð"
## Hér er plot af Aggregated gögnum
}
aggr_data$Group.2 <- factor(aggr_data$Group.2,
levels = c("Meðaltal", "postnr 101", "postnr 103", "postnr 104", "postnr 105"),
ordered = TRUE)
options(scipen=5)
observe(p)
ggplot(aggr_data,
aes_string(x = "Group.1", y = "x", group = "Group.2",
colour = "Group.2")) +
geom_line() +
scale_colour_manual(values=c("#999999", "#E69F00", "#56B4E9", "#454345", "#949353"),
guide = guide_legend(title = "Postnr"), drop = FALSE) +
theme(axis.title.y=element_text(margin=margin(0,20,0,0)))
})
} #the server
shinyApp(ui = ui, server = server) # this launches your app
library(shiny)
library(ggplot2)
cleandata <- read.csv("data/data_clean.csv")
maxsize <- max(cleandata$size)
minsize <- min(cleandata$size)
postnr_mean <- c(101:116, 170, 172)
dagsetningar <- as.character(unique(unlist(cleandata$date)))
## Clean up the datafile
cleandata <- cleandata[, c("postnr", "verd", "size", "fermverd", "date")]
ui <- fluidPage(
titlePanel("Þróun á íbúðarverði"),
sidebarLayout(position = "left",
sidebarPanel(checkboxGroupInput("checkGroup",
label = h3("Póstnúmer"),
choices = list(
"Meðaltal" = 999,
"101" = 101,
"103" = 103,
"104" = 104,
"105" = 105
),
selected = c("101")
),
selectInput("dataType",
label = h3("Tegund gagna"),
choices = list("Verð" = 1, "Fermetraverð" = 2),
selected = 1
),
sliderInput("size",
label = h3("Stærð í fm2"),
min = minsize,
max = maxsize,
value = c(75, 125)
)
),
mainPanel("main panel",
plotOutput('myplot'))
))
server <- function(input, output) {
output$myplot <- renderPlot({
### Bara fyrir meðaltal
prep_trend <- cleandata[cleandata$postnr %in% postnr_mean,]
prep_trend <- prep_trend[prep_trend$size > input$size[1] & prep_trend$size < input$size[2],]
prep_trend$postnr <- 999
cleandata <- rbind(cleandata, prep_trend)
prep <- cleandata[cleandata$postnr %in% input$checkGroup,]
prep <- prep[prep$size > input$size[1] & prep$size < input$size[2],]
if(input$dataType == 1)
{
aggr_data <- aggregate(prep$verd, by=list(prep$date, prep$postnr), mean)
aggr_data$Group.2 <- paste("postnr ", aggr_data$Group.2, sep = "")
#aggr_data$Group.2 <- aggr_data[aggr_data$Group.2 == "postnr 999"] <- "Meðaltal"
y.name <- "Verð"
} else {
aggr_data <- aggregate(prep$fermverd, by=list(prep$date, prep$postnr), mean)
aggr_data$Group.2 <- paste("postnr ", aggr_data$Group.2, sep = "")
aggr_data$Group.2 <- aggr_data[aggr_data == "postnr 999"] <- "Meðaltal"
y.name <- "Fermetraverð"
## Hér er plot af Aggregated gögnum
}
aggr_data$Group.2 <- factor(aggr_data$Group.2,
levels = c("Meðaltal", "postnr 101", "postnr 103", "postnr 104", "postnr 105"),
ordered = TRUE)
options(scipen=5)
observe(p)
ggplot(aggr_data,
aes_string(x = "Group.1", y = "x", group = "Group.2",
colour = "Group.2")) +
geom_line() +
scale_colour_manual(values=c("#999999", "#E69F00", "#56B4E9", "#454345", "#949353"),
guide = guide_legend(title = "Postnr"), drop = FALSE) +
theme(axis.title.y=element_text(margin=margin(0,20,0,0)))
})
} #the server
shinyApp(ui = ui, server = server) # this launches your app
library(shiny)
library(ggplot2)
cleandata <- read.csv("data/data_clean.csv")
maxsize <- max(cleandata$size)
minsize <- min(cleandata$size)
postnr_mean <- c(101:116, 170, 172)
dagsetningar <- as.character(unique(unlist(cleandata$date)))
## Clean up the datafile
cleandata <- cleandata[, c("postnr", "verd", "size", "fermverd", "date")]
ui <- fluidPage(
titlePanel("Þróun á íbúðarverði"),
sidebarLayout(position = "left",
sidebarPanel(checkboxGroupInput("checkGroup",
label = h3("Póstnúmer"),
choices = list(
"Meðaltal" = 999,
"101" = 101,
"103" = 103,
"104" = 104,
"105" = 105
),
selected = c("101")
),
selectInput("dataType",
label = h3("Tegund gagna"),
choices = list("Verð" = 1, "Fermetraverð" = 2),
selected = 1
),
sliderInput("size",
label = h3("Stærð í fm2"),
min = minsize,
max = maxsize,
value = c(75, 125)
)
),
mainPanel("main panel",
plotOutput('myplot'))
))
server <- function(input, output) {
output$myplot <- renderPlot({
### Bara fyrir meðaltal
prep_trend <- cleandata[cleandata$postnr %in% postnr_mean,]
prep_trend <- prep_trend[prep_trend$size > input$size[1] & prep_trend$size < input$size[2],]
prep_trend$postnr <- 999
cleandata <- rbind(cleandata, prep_trend)
prep <- cleandata[cleandata$postnr %in% input$checkGroup,]
prep <- prep[prep$size > input$size[1] & prep$size < input$size[2],]
if(input$dataType == 1)
{
aggr_data <- aggregate(prep$verd, by=list(prep$date, prep$postnr), mean)
aggr_data$Group.2 <- paste("postnr ", aggr_data$Group.2, sep = "")
#aggr_data$Group.2 <- aggr_data[aggr_data$Group.2 == "postnr 999"] <- "Meðaltal"
y.name <- "Verð"
} else {
aggr_data <- aggregate(prep$fermverd, by=list(prep$date, prep$postnr), mean)
aggr_data$Group.2 <- paste("postnr ", aggr_data$Group.2, sep = "")
aggr_data[aggr_data == "postnr 999"] <- "Meðaltal"
y.name <- "Fermetraverð"
## Hér er plot af Aggregated gögnum
}
aggr_data$Group.2 <- factor(aggr_data$Group.2,
levels = c("Meðaltal", "postnr 101", "postnr 103", "postnr 104", "postnr 105"),
ordered = TRUE)
options(scipen=5)
observe(p)
ggplot(aggr_data,
aes_string(x = "Group.1", y = "x", group = "Group.2",
colour = "Group.2")) +
geom_line() +
scale_colour_manual(values=c("#999999", "#E69F00", "#56B4E9", "#454345", "#949353"),
guide = guide_legend(title = "Postnr"), drop = FALSE) +
theme(axis.title.y=element_text(margin=margin(0,20,0,0)))
})
} #the server
shinyApp(ui = ui, server = server) # this launches your app
options(scipen=5)
library(shiny)
library(ggplot2)
cleandata <- read.csv("data/data_clean.csv")
maxsize <- max(cleandata$size)
minsize <- min(cleandata$size)
postnr_mean <- c(101:116, 170, 172)
dagsetningar <- as.character(unique(unlist(cleandata$date)))
## Clean up the datafile
cleandata <- cleandata[, c("postnr", "verd", "size", "fermverd", "date")]
ui <- fluidPage(
titlePanel("Þróun á íbúðarverði"),
sidebarLayout(position = "left",
sidebarPanel(checkboxGroupInput("checkGroup",
label = h3("Póstnúmer"),
choices = list(
"Meðaltal" = 999,
"101" = 101,
"103" = 103,
"104" = 104,
"105" = 105
),
selected = c("101")
),
selectInput("dataType",
label = h3("Tegund gagna"),
choices = list("Verð" = 1, "Fermetraverð" = 2),
selected = 1
),
sliderInput("size",
label = h3("Stærð í fm2"),
min = minsize,
max = maxsize,
value = c(75, 125)
)
),
mainPanel("main panel",
plotOutput('myplot'))
))
server <- function(input, output) {
output$myplot <- renderPlot({
### Bara fyrir meðaltal
prep_trend <- cleandata[cleandata$postnr %in% postnr_mean,]
prep_trend <- prep_trend[prep_trend$size > input$size[1] & prep_trend$size < input$size[2],]
prep_trend$postnr <- 999
cleandata <- rbind(cleandata, prep_trend)
prep <- cleandata[cleandata$postnr %in% input$checkGroup,]
prep <- prep[prep$size > input$size[1] & prep$size < input$size[2],]
if(input$dataType == 1)
{
aggr_data <- aggregate(prep$verd, by=list(prep$date, prep$postnr), mean)
aggr_data$Group.2 <- paste("postnr ", aggr_data$Group.2, sep = "")
#aggr_data$Group.2 <- aggr_data[aggr_data$Group.2 == "postnr 999"] <- "Meðaltal"
y.name <- "Verð"
} else {
aggr_data <- aggregate(prep$fermverd, by=list(prep$date, prep$postnr), mean)
aggr_data$Group.2 <- paste("postnr ", aggr_data$Group.2, sep = "")
aggr_data[aggr_data == "postnr 999"] <- "Meðaltal"
y.name <- "Fermetraverð"
## Hér er plot af Aggregated gögnum
}
aggr_data$Group.2 <- factor(aggr_data$Group.2,
levels = c("Meðaltal", "postnr 101", "postnr 103", "postnr 104", "postnr 105"),
ordered = TRUE)
options(scipen=5)
observe(p)
ggplot(aggr_data,
aes_string(x = "Group.1", y = "x", group = "Group.2",
colour = "Group.2")) +
geom_line() +
scale_colour_manual(values=c("#ff0000", "#E69F00", "#56B4E9", "#454345", "#949353"),
guide = guide_legend(title = "Postnr"), drop = FALSE) +
theme(axis.title.y=element_text(margin=margin(0,20,0,0)))
})
} #the server
shinyApp(ui = ui, server = server) # this launches your app
library(shiny)
library(ggplot2)
cleandata <- read.csv("data/data_clean.csv")
maxsize <- max(cleandata$size)
minsize <- min(cleandata$size)
postnr_mean <- c(101:116, 170, 172)
dagsetningar <- as.character(unique(unlist(cleandata$date)))
## Clean up the datafile
cleandata <- cleandata[, c("postnr", "verd", "size", "fermverd", "date")]
ui <- fluidPage(
titlePanel("Þróun á íbúðarverði"),
sidebarLayout(position = "left",
sidebarPanel(checkboxGroupInput("checkGroup",
label = h3("Póstnúmer"),
choices = list(
"Meðaltal" = 999,
"101" = 101,
"103" = 103,
"104" = 104,
"105" = 105
),
selected = c("101")
),
selectInput("dataType",
label = h3("Tegund gagna"),
choices = list("Verð" = 1, "Fermetraverð" = 2),
selected = 1
),
sliderInput("size",
label = h3("Stærð í fm2"),
min = minsize,
max = maxsize,
value = c(75, 125)
)
),
mainPanel("main panel",
plotOutput('myplot'))
))
server <- function(input, output) {
output$myplot <- renderPlot({
### Bara fyrir meðaltal
prep_trend <- cleandata[cleandata$postnr %in% postnr_mean,]
prep_trend <- prep_trend[prep_trend$size > input$size[1] & prep_trend$size < input$size[2],]
prep_trend$postnr <- 999
cleandata <- rbind(cleandata, prep_trend)
prep <- cleandata[cleandata$postnr %in% input$checkGroup,]
prep <- prep[prep$size > input$size[1] & prep$size < input$size[2],]
if(input$dataType == 1)
{
aggr_data <- aggregate(prep$verd, by=list(prep$date, prep$postnr), mean)
aggr_data$Group.2 <- paste("postnr ", aggr_data$Group.2, sep = "")
#aggr_data$Group.2 <- aggr_data[aggr_data$Group.2 == "postnr 999"] <- "Meðaltal"
y.name <- "Verð"
} else {
aggr_data <- aggregate(prep$fermverd, by=list(prep$date, prep$postnr), mean)
aggr_data$Group.2 <- paste("postnr ", aggr_data$Group.2, sep = "")
aggr_data[aggr_data == "postnr 999"] <- "Meðaltal"
y.name <- "Fermetraverð"
## Hér er plot af Aggregated gögnum
}
aggr_data$Group.2 <- factor(aggr_data$Group.2,
levels = c("Meðaltal", "postnr 101", "postnr 103", "postnr 104", "postnr 105"),
ordered = TRUE)
options(scipen=5)
observe(p)
ggplot(aggr_data,
aes_string(x = "Group.1", y = "x", group = "Group.2",
colour = "Group.2")) +
geom_line() +
scale_colour_manual(values=c("#FF0000", "#E69F00", "#56B4E9", "#454345", "#949353"),
guide = guide_legend(title = "Postnr"), drop = FALSE) +
theme(axis.title.y=element_text(margin=margin(0,20,0,0)))
})
} #the server
shinyApp(ui = ui, server = server) # this launches your app
?round
runApp()
