total.pages <- as.numeric(tail(strsplit(theline,split=" ")[[1]],1)) #### vinna seinasta orðið úr setningunni og nota það sem tölustaf.
num.pages <- c(1:total.pages)}
num.pages
require(XML)
require(RCurl)
require(RMySQL)
blanda_ready <- data.frame()
blanda <- data.frame()
website <- "http://www.mbl.is/fasteignir/leit/?q=abfafabeaea3e6435c02ce698e13fe6a"
fixedURL <- getURL(website, followlocation=TRUE)
parsed.html <- htmlParse(fixedURL, encoding='UTF-8')
### Hérna byrja ég á því að skoða hvað það eru margar síður á fasteignum mbl ###
theline <- xpathApply(parsed.html,"//div[@class='info']/small", xmlValue)
if (is.null(theline)) {
num.pages <- 1
total.pages <- 1
} else
{
theline <- gsub('\\n', ' ', theline) ### breyta \n í bil
theline <- sub("\\s+$", "", theline) ### fjarlægja bilið sem hefur birst í endann
total.pages <- as.numeric(tail(strsplit(theline,split=" ")[[1]],1)) #### vinna seinasta orðið úr setningunni og nota það sem tölustaf.
num.pages <- c(1:total.pages)}
### Progress bar
t <- 1
pb <- txtProgressBar(1, total.pages, style=3)
#### hér er loopan til að sækja allt
for (i in num.pages){
#The progress bar first
##        t <- (t+1)
##        Sys.sleep(0.02)
##        setTxtProgressBar(pb, t)
website <- paste0("http://www.mbl.is/fasteignir/leit/?page=", 1, "&q=abfafabeaea3e6435c02ce698e13fe6a")
fixedURL <- getURL(website, followlocation=TRUE)
parsed.html <- htmlParse(fixedURL, encoding='UTF-8')
gotuheiti <- gsub('.{1}$', '', as.list(xpathApply(parsed.html, "//h4", xmlValue)))
postnr <- as.numeric(gsub("[^0-9]", "", as.list(xpathApply(parsed.html, "//h5", xmlValue))))
tegund <- xpathApply(parsed.html,"//div[@class='realestate-properties']/span[contains(.,'Tegund')]/strong", xmlValue)
verd <- as.numeric(gsub("[^0-9]", "", xpathApply(parsed.html,"//div[@class='realestate-properties']/span[contains(.,'Verð')]/strong", xmlValue)))
size <- as.numeric(gsub('.{3}$', '', xpathApply(parsed.html,"//div[@class='realestate-properties']/span[contains(.,'Stærð')]/strong", xmlValue)))
herbergi <- as.numeric(xpathApply(parsed.html,"//div[@class='realestate-properties']/span[contains(.,'Herbergi')]/strong", xmlValue))
# gera lista af dagsetningum
nyskrad <- rep(list(as.character(Sys.Date())), length(gotuheiti))
options(scipen=999)
blanda <- as.data.frame(cbind(gotuheiti, postnr, tegund, verd, herbergi, size, nyskrad))
## hérna er fermverd búið til.
fermverd <- round(as.numeric(blanda$verd)/as.numeric(blanda$size), digits = 0)
fermverd <- as.list(fermverd)
blanda$fermverd <- fermverd
blanda_ready <- rbind(blanda_ready, blanda)
}
###keep only unique
blanda_ready <- unique(blanda_ready)
### unlist so I can save as cvs
blanda_ready$gotuheiti <- unlist(blanda_ready$gotuheiti)
blanda_ready$postnr <- unlist(blanda_ready$postnr)
blanda_ready$tegund <- unlist(blanda_ready$tegund)
blanda_ready$verd <- unlist(blanda_ready$verd)
blanda_ready$herbergi <- unlist(blanda_ready$herbergi)
blanda_ready$size <- unlist(blanda_ready$size)
blanda_ready$fermverd <- unlist(blanda_ready$fermverd)
blanda_ready$nyskrad <- unlist(blanda_ready$nyskrad)
# Breyta öllum inf í NA
blanda_ready[ blanda_ready == "Inf" ] = NA
# Remove ALL NA cases
blanda_ready <- na.omit(blanda_ready)
save.name <- paste0("/var/www/skrapari/ibudir/nyskradar_ibudir_verd_", Sys.Date(), ".csv")
write.csv2(blanda_ready, file = save.name)
mydb = dbConnect(MySQL(), user='noi', password='noipassword', host='127.0.0.1', dbname="noi")
dbWriteTable(mydb, "wp_ibudir", blanda, append = TRUE, row.names = F, )
print("----")
print("ibudir -- nyskradar -- scraper successful")
print(date())
sample
sample(x,size = 1)
sample(size = 1)
sample(eightd, size = 1)
eightd <- c(1:8)
sample(eightd, size = 1)
sample(eightd, size = 1)
sample(eightd, size = 1)
sample(eightd, size = 1)
sample(eightd, size = 1)
sample(eightd, size = 1)
sample(eightd, size = 5)
df
count = 20
player = 0
for (i in count) {
player <- player + 1
if (player = 4) {
player <- 1
}
}
count = 20
player = 0
for (i in count) {
player <- player + 1
if (player = 4) {
player <- 1
}
}
count = 20
player = 0
for (i in count) {
player <- player + 1
if (player == 4) {
player <- 1
}
}
count = 20
player = 0
for (i in count) {
player <- player + 1
if (player == 4) {
player <- 1
print player
}
}
count = 20
player = 0
for (i in count) {
player <- player + 1
if (player == 4) {
player <- 1
}
print player
}
if (count == 20 ) print "test"
if (count == 20 ) {print "test"}
if (count == 20 ) { print "test"}
count = 20
player = 0
for (i in count) {
player <- player + 1
if(player == 4) {
player <- 1
}
print player
}
if(player == 4) {
player <- 1
}
for (i in count) {
player <- player + 1
if(player == 4) {
player <- 1
}
print player
}
count = 20
player = 0
for (i in count) {
player <- player + 1
if(player == 4) {
player <- 1
}
print(player)
}
count = 20
player = 0
for (i in count) {
player <- player + 1
if(player == 4) {
player <- 1
}
print(player)
}
count = 20
player = 0
for (i in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
for (x in count) {
player <- player + 1
print(player)
}
count <- 20
player <- 0
for (x in count) {
player <- player + 1
print(player)
}
count <- 20
player <- 0
for (x in count){
player <- player + 1
print(player)
}
count <- 20
player <- 0
for (x in count){
player <- player + 1
print(player)
}
r
R
count <- 20
player <- 0
for (i in count){
player <- player + 1
print(player)
}
setwd("~/forritun/ibudir/map_app")
data_clean <- read.csv("data/data_clean.csv")
str(data_clean$date)
str(data_clean$ny)
str(data_clean$nyskrad)
?read.csv
data_clean <- read.csv("data/data_clean.csv", colClasses = c("date"="Date"))
str(data_clean$date)
max(data_clean$date)
maxdate <- max(data_clean$date)
maxdate -6
?date
?Sys.time()
format()
?format()
as.yearmon
as.yearmon(maxdate)
install.packages("zoo")
library(zoo)
library(lubridate)
maxdate %m-% months(-6)
maxdate %m-% months(+6)
maxdate %m-% months(6)
six.m.ago <- maxdate %m-% months(6)
all_postnr <- unique(data_clean$postnr)
all_postnr <- order(unique(data_clean$postnr))
all_postnr
View(data_clean)
all_postnr <- unique(data_clean$postnr)
all_postnr
order(all_postnr)
sort(all_postnr)
all_postnr <- sort(unique(data_clean$postnr))
list("Choice 1" = 1, "Choice 2" = 2, "Choice 3" = 3)
shiny::runApp('~/forritun/ibudir/ibudir_samantekt')
runApp('~/forritun/ibudir/ibudir_samantekt')
runApp('~/forritun/ibudir/ibudir_samantekt')
runApp('~/forritun/ibudir/ibudir_samantekt')
runApp('~/forritun/ibudir/ibudir_samantekt')
all_postnr <- as.list(sort(unique(data_clean$postnr)))
runApp('~/forritun/ibudir/ibudir_samantekt')
test$names <- all_postnr
test <- as.data.frame(test)
as.data.frame(test)
test <- test()
test <- as.data.frame()
test <- as.data.frame(test)
test <- data.frame()
test$names <- all_postnr
test$names <- as.data.frame(all_postnr)
test <- data.frame([,2])
test <- data.frame[,2]
test <- data.frame[2,]
test <- data.frame(character(), numeric())
test
test$names <- as.data.frame(all_postnr)
test$names <- all_postnr
?cbind
rbind(all_postnr, all_postnr)
test <- rbind(all_postnr, all_postnr)
test
View(test)
test <- cbind(all_postnr, all_postnr)
View(test)
?lapply
test2 <- lapply(all_postnr, paste0("póstnúmer ", x))
paste0("Póstnúmer ", all_postnr)
?cbind
test <- cbind(paste0("Póstnúmer", all_postnr), all_postnr)
View(test)
test <- cbind(paste0("Póstnúmer ", all_postnr), all_postnr)
runApp('~/forritun/ibudir/ibudir_samantekt')
runApp('~/forritun/ibudir/ibudir_samantekt')
paste0("Póstnúmer ", "=", all_postnr)
test <- paste0("Póstnúmer ", "= ", all_postnr)
runApp('~/forritun/ibudir/ibudir_samantekt')
test <- cbind(
)
ui <- sidebarLayout(position = "left",
sidebarPanel(selectInput("select", label = h3("Select box"),
choices = test)))
test <- cbind(paste0("Póstnúmer ", all_postnr), all_postnr)
test
View(test)
ui <- sidebarLayout(position = "left",
sidebarPanel(selectInput("select", label = h3("Select box"),
choices = test$V1 = test$all_postnr)))
runApp('~/forritun/ibudir/ibudir_samantekt')
View(test)
split(test, list(test$V1, test$all_postnr))
split(test, list(test$V1, test$all_postnr))
?split
list(test$V1, test$all_postnr)
test$V1
View(test)
test <- cbind(paste0("Póstnúmer ", all_postnr), all_postnr)
split(test, list(test$V1, test$all_postnr))
test$all_postnr
test[,1]
test[,2]
View(test)
split(test, list(test[,1], test$[,2]))
split(test, list(test[,1], test[,2]))
list(test[,1], test[,2]
)
split(test[.1], test[,2])
split(test[.1], test[,2])
test <- split(test[.1], test[,2])
setNames()
?setNames
test <- split(test[.1], test[,2])
test <- cbind(paste0("Póstnúmer ", all_postnr), all_postnr)
runApp('~/forritun/ibudir/ibudir_samantekt')
runApp('~/forritun/ibudir/ibudir_samantekt')
runApp('~/forritun/ibudir/ibudir_samantekt')
runApp('~/forritun/ibudir/ibudir_samantekt')
runApp('~/forritun/ibudir/ibudir_samantekt')
test
runApp('~/forritun/ibudir/ibudir_samantekt')
runApp('~/forritun/ibudir/ibudir_samantekt')
runApp('~/forritun/ibudir/ibudir_samantekt')
runApp('~/forritun/ibudir/ibudir_samantekt')
runApp('~/forritun/ibudir/ibudir_samantekt')
?setnames
?setNames
runApp('~/forritun/ibudir/ibudir_samantekt')
prep_trend <- prep_trend[prep_trend$size > smallerfm & prep_trend$size < biggerfm,]
setwd("~/forritun/ibudir/ibudir_samantekt")
library(shiny)
library(ggplot2)
library(lubridate)
data_clean <- read.csv("data/data_clean.csv", colClasses = c("date"="Date"))
biggerfm <- 100
smallerfm <- 75
posturinn <- 105
postnr_mean <- c(101:116, 170, 172)
prep_trend <- data_clean[data_clean$postnr %in% postnr_mean,]
prep_trend <- prep_trend[prep_trend$size > smallerfm & prep_trend$size < biggerfm,]
mean(prep_trend$verd)
trimmed_data <- clean_data[clean_data$size > smallerfm & clean_data$size < biggerfm,]
trimmed_data <- data_clean[data_clean$size > smallerfm & data_clean$size < biggerfm,]
trimmed_data[trimmed_data$postnr == posturinn]
trimmed_data[trimmed_data$postnr == posturinn,]
rvk_fm_mean <- mean(prep_trend$fermverd)
trimmed_data <- data_clean[data_clean$size > smallerfm & data_clean$size < biggerfm,]
trimmed_data <- trimmed_data[trimmed_data$postnr == posturinn,]
trimmed_mean <- mean(trimmed_data$verd)
trimmed_fm_mean <- mean(trimmed_data$fermverd)
length(trimmed_data[trimmed_data$herbergi == 1,])
herbergi.2 <- length(trimmed_data[trimmed_data$herbergi == 2,])
length(trimmed_data[trimmed_data$herbergi == 3,]
)
length(trimmed_data[trimmed_data$herbergi == 4,])
length(trimmed_data[trimmed_data$herbergi => 5,])
length(trimmed_data[trimmed_data$herbergi >= 5,])
count(trimmed_data[trimmed_data$herbergi >= 5,])
nrow(trimmed_data[trimmed_data$herbergi >= 5,])
length(trimmed_data[trimmed_data$herbergi == 4,])
length(trimmed_data[trimmed_data$herbergi == 3,])
six.m.ago <- maxdate %m-% months(6)
maxdate <- max(data_clean$date)
six.m.ago <- maxdate %m-% months(6)
data_clean[data_clean$date >= six.m.ago]
data_clean[data_clean$date >= six.m.ago]
str(data_clean)
data_clean[data_clean$date %in% six.m.ago:maxdate]
data_clean$date
six.m.ago:maxdate
data_clean[data_clean$date >= six.m.ago,]
str(data_clean[data_clean$date >= six.m.ago,])
head(data_clean[data_clean$date >= six.m.ago,])
tail(data_clean[data_clean$date >= six.m.ago,])
max_verd <- max(trimmed_data$verd)
min_verd <- min(trimmed_data$verd)
herbergi.1 <- nrow(trimmed_data[trimmed_data$herbergi == 1,])
herbergi.2 <- nrow(trimmed_data[trimmed_data$herbergi == 2,])
herbergi.3 <- nrow(trimmed_data[trimmed_data$herbergi == 3,])
herbergi.4 <- nrow(trimmed_data[trimmed_data$herbergi == 4,])
herbergi.5 <- nrow(trimmed_data[trimmed_data$herbergi >= 5,])
lm(trimmed_data$verd, trimmed_data$date)
server <- function(input, output) {
biggerfm <- 100
smallerfm <- 75
posturinn <- 105
## Sex mánuði aftur í tímann
data_clean[data_clean$date >= six.m.ago,]
### RVK meðalverð
postnr_mean <- c(101:116, 170, 172)
prep_trend <- data_clean[data_clean$postnr %in% postnr_mean,]
prep_trend <- prep_trend[prep_trend$size > smallerfm & prep_trend$size < biggerfm,]
rvk_mean <- mean(prep_trend$verd)
rvk_fm_mean <- mean(prep_trend$fermverd)
### Trim the Data
trimmed_data <- data_clean[data_clean$size > smallerfm & data_clean$size < biggerfm,]
trimmed_data <- trimmed_data[trimmed_data$postnr == posturinn,]
trimmed_mean <- mean(trimmed_data$verd)
trimmed_fm_mean <- mean(trimmed_data$fermverd)
max_verd <- max(trimmed_data$verd)
min_verd <- min(trimmed_data$verd)
### get number of rooms
herbergi.1 <- nrow(trimmed_data[trimmed_data$herbergi == 1,])
herbergi.2 <- nrow(trimmed_data[trimmed_data$herbergi == 2,])
herbergi.3 <- nrow(trimmed_data[trimmed_data$herbergi == 3,])
herbergi.4 <- nrow(trimmed_data[trimmed_data$herbergi == 4,])
herbergi.5 <- nrow(trimmed_data[trimmed_data$herbergi >= 5,])
}
lm(trimmed_data$verd ~ trimmed_data$date)
lm(trimmed_data$date ~ trimmed_data$verd)
lm(trimmed_data$verd ~ trimmed_data$date)
plot(trimmed_data$verd ~ trimmed_data$date)
plot(trimmed_data$verd ~ trimmed_data$nyskrad)
abline(lm(trimmed_data$verd ~ trimmed_data$nyskrad))
abline(lm(trimmed_data$verd ~ trimmed_data$date))
plot(trimmed_data$verd ~ trimmed_data$date)
abline(lm(trimmed_data$verd ~ trimmed_data$date))
abline(nlm(trimmed_data$verd ~ trimmed_data$nyskrad))
?nlm
